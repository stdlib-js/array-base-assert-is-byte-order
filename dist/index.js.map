{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar contains = require( '@stdlib/array-base-assert-contains' ).factory;\nvar byteOrders = require( '@stdlib/array-byte-orders' );\n\n\n// MAIN //\n\n/**\n* Tests whether an input value is a supported array byte order.\n*\n* @name isByteOrder\n* @type {Function}\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating whether an input value is a supported array byte order\n*\n* @example\n* var bool = isByteOrder( 'little-endian' );\n* // returns true\n*\n* bool = isByteOrder( 'big-endian' );\n* // returns true\n*\n* bool = isByteOrder( 'foo' );\n* // returns false\n*/\nvar isByteOrder = contains( byteOrders() );\n\n\n// EXPORTS //\n\nmodule.exports = isByteOrder;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an input value is a supported array byte order.\n*\n* @module @stdlib/array-base-assert-is-byte-order\n*\n* @example\n* var isByteOrder = require( '@stdlib/array-base-assert-is-byte-order' );\n*\n* var bool = isByteOrder( 'little-endian' );\n* // returns true\n*\n* bool = isByteOrder( 'big-endian' );\n* // returns true\n*\n* bool = isByteOrder( 'foo' );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAW,QAAS,oCAAqC,EAAE,QAC3DC,EAAa,QAAS,2BAA4B,EAuBlDC,EAAcF,EAAUC,EAAW,CAAE,EAKzCF,EAAO,QAAUG,ICXjB,IAAIC,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "contains", "byteOrders", "isByteOrder", "main"]
}
